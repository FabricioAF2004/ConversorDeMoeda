package com.mycompany.conversordemoeda;

import javax.swing.JOptionPane;

public class Tela extends javax.swing.JFrame {

        private String MoedaOrigem = "USD";
        private String MoedaDestino = "BRL";
    
    

    public Tela() {
        initComponents();
        
            }

    // Método chamado quando a seleção da moeda de destino é alterada
    private void cbMoedaDestinoActionPerformed(java.awt.event.ActionEvent evt) {                                               
        MoedaDestino = cbMoedaDestino.getSelectedItem().toString();
    }                                              

    // Método chamado quando a seleção da moeda de origem é alterada
    private void cbMoedaOrigemActionPerformed(java.awt.event.ActionEvent evt) {                                              
        MoedaOrigem = cbMoedaOrigem.getSelectedItem().toString();
    }                                             

    // Método para converter moeda
    private double converterMoeda(double valor, String origem, String destino) {
        double taxa = 1.0;
        
        if (origem.equals("USD") && destino.equals("BRL")) {
            taxa = 5.0;
        } else if (origem.equals("USD") && destino.equals("EUR")) {
            taxa = 0.85;
        } else if (origem.equals("BRL") && destino.equals("USD")) {
            taxa = 0.20;
        } else if (origem.equals("BRL") && destino.equals("EUR")) {
            taxa = 0.17;
        } else if (origem.equals("EUR") && destino.equals("USD")) {
            taxa = 1.18;
        } else if (origem.equals("EUR") && destino.equals("BRL")) {
            taxa = 5.9;
        }

        return valor * taxa;
    }

    // Método chamado quando o botão de conversão é pressionado
    private void ConverterActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try {
            double valor = Double.parseDouble(txtValor.getText());
            double resultado = converterMoeda(valor, MoedaOrigem, MoedaDestino);
            String textoResultado = String.format("Valor: %.2f %s = Resultado: %.2f %s",
                                                   valor, MoedaOrigem, resultado, MoedaDestino);
            txtValor.setText(textoResultado);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira um valor válido.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }                                         
    
    // Método para limpar os campos
    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {                                       
        txtValor.setText(""); // Limpa o campo de valor
    }

    // Variáveis de declaração - não modifique
    private javax.swing.JButton Converter;
    private javax.swing.JButton Limpar;
    private javax.swing.JComboBox<String> cbMoedaDestino;
    private javax.swing.JComboBox<String> cbMoedaOrigem;
        
    }
        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MoedaOrigem = new javax.swing.JComboBox<>();
        MoedaDestino = new javax.swing.JComboBox<>();
        Limpar = new javax.swing.JButton();
        Converter = new javax.swing.JButton();
        txtValor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MoedaOrigem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "BRL", "EUR" }));
        MoedaOrigem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoedaOrigemActionPerformed(evt);
            }
        });

        MoedaDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "USD", "BRL", "EUR" }));
        MoedaDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoedaDestinoActionPerformed(evt);
            }
        });

        Limpar.setText("Limpar");
        Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparActionPerformed(evt);
            }
        });

        Converter.setText("Converter");
        Converter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConverterActionPerformed(evt);
            }
        });

        txtValor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtValor.setText("Insisra o valor");
        txtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtValor)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MoedaOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MoedaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Converter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Limpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MoedaOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Converter, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MoedaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(139, 139, 139))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void MoedaDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoedaDestinoActionPerformed
    MoedaDestino = cbMoedaDestino.getSelectedItem().toString();
    }//GEN-LAST:event_MoedaDestinoActionPerformed

    private void MoedaOrigemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoedaOrigemActionPerformed
     MoedaOrigem = cbMoedaOrigem.getSelectedItem().toString();
    }//GEN-LAST:event_MoedaOrigemActionPerformed

    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparActionPerformed
     txtValor.setText(""); // Limpa o campo de valor
    // Não há necessidade de limpar um JLabel; `txtValor` agora é um JTextField
    }//GEN-LAST:event_LimparActionPerformed

    private void ConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConverterActionPerformed
// Exemplo de taxas fixas para conversão
   
try {
        // Captura e converte o valor digitado no JTextField
        double valor = Double.parseDouble(txtValor.getText()); 
        
        // Chama o método de conversão
        double resultado = converterMoeda(valor, MoedaOrigem, MoedaDestino); 
        
        // Formata e exibe o valor e o resultado da conversão no JTextField txtValor
        String textoResultado = String.format("Valor: %.2f %s = Resultado: %.2f %s", 
                                               valor, MoedaOrigem, resultado, MoedaDestino);
        txtValor.setText(textoResultado); // Exibe o resultado formatado
    } catch (NumberFormatException e) {
        // Exibe uma mensagem de erro se o valor digitado não for válido
        JOptionPane.showMessageDialog(null, "Por favor, insira um valor válido.", "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_ConverterActionPerformed

    private void txtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorActionPerformed
    
    // Método para realizar a conversão
private double converterMoeda(double valor, String origem, String destino) {
    double taxa = 1.0;
    
    // Exemplo de taxas fixas para conversão
    if (origem.equals("USD") && destino.equals("BRL")) {
        taxa = 5.0; // Exemplo: 1 USD = 5 BRL
    } else if (origem.equals("USD") && destino.equals("EUR")) {
        taxa = 0.85; // Exemplo: 1 USD = 0.85 EUR
    } else if (origem.equals("BRL") && destino.equals("USD")) {
        taxa = 0.20; // Exemplo: 1 BRL = 0.20 USD
    } else if (origem.equals("BRL") && destino.equals("EUR")) {
        taxa = 0.17; // Exemplo: 1 BRL = 0.17 EUR
    } else if (origem.equals("EUR") && destino.equals("USD")) {
        taxa = 1.18; // Exemplo: 1 EUR = 1.18 USD
    } else if (origem.equals("EUR") && destino.equals("BRL")) {
        taxa = 5.9; // Exemplo: 1 EUR = 5.9 BRL
    }

    return valor * taxa; // Retorna o valor convertido
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Converter;
    private javax.swing.JButton Limpar;
    private javax.swing.JComboBox<String> MoedaDestino;
    private javax.swing.JComboBox<String> MoedaOrigem;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

